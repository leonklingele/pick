# Pick configuration
#
# If no config file is available, sensible defaults will be used.
# If you wish to use a config file, it must be located at ~/.pick/config.toml
#
# Variables:
# $HOME - Replaced with the path to your home directory, e.g. $HOME/.pick -> /home/john/.pick


## General
# # The general section controls general settings for pick.
# [general]
#   [general.password]
#   # Specifies the length of generated passwords.
#   length = 25
#   # Specifies the mode to generate new passwords, currently supported: "interactive".
#   # If set to "interactive", the password generation can be modified in the following ways:
#   #  - Increase character set via: Up-arrow key / "k"
#   #  - Decrease character set via: Down-arrow key / "j"
#   #  - Increase length via: Right-arrow key / "l"
#   #  - Decrease length via: Left-arrow key / "h"
#   #  - Use current password: Enter key
#   mode = "interactive"
#   [general.clipboard]
#   # Specifies the time after which the clipboard is cleared.
#   clearAfter = "90s"


## Storage
# The storage section controls where the safe is stored and which storage type to use.
[storage]
type = "file"
  [storage.settings]
  path = "$HOME/.pick/pick.safe"
  #[storage.backup]
  # Whether to auto-create backups before the safe is modified.
  #auto = true
  # The number of backups to keep.
  # Specify -1 to allow unlimited backups, 0 to not create backups at all.
  #max = 100

# type = "s3"
#   [storage.settings]
#   # Name of AWS S3 bucket
#   bucket = "bndw-pick"
#   # Key for safe in bucket
#   key = "public/default.safe"
#   # AWS Region
#   region = "us-west-2"
#   # AWS Profile in ~/.aws/credentials. If none is provided, "default" will be used.
#   profile = ""
#   #[storage.backup]
#   # Whether to auto-create backups before the safe is modified.
#   #auto = true
#   # The number of backups to keep.
#   # Specify -1 to allow unlimited backups, 0 to not create backups at all.
#   #max = 100


## Encryption
#
#    Danger Area!
#    Only uncomment / adjust the settings in the [encryption] section if you know what you are doing.
#    If you change something and we update our default (recommended) settings, your safe will
#    _not_ automatically upgrade to our new recommendations.
#    All settings in the [encryption] section can be modified on-the-fly, i.e. your safe
#    will automatically upgrade from the old to the new encryption settings.
#    The encryption section controls the configuration of the safe encryption.
#
# [encryption]
# # type lets you specify the encryption method to use.
# # Currently supported: "openpgp", "aes_gcm", "chachapoly".
# type = "chachapoly"
#
#   [encryption.chachapoly]
#   # Specifies the key derivation function to use.
#   # Currently supported values: "pbkdf2", "scrypt".
#   keyderivation = "pbkdf2"
#     # Settings for the "pbkdf2" Key-Derivation type
#     [encryption.chachapoly.pbkdf2]
#     # The hash function to use for PBKDF2.
#     # Currently supported values: "sha512", "sha256".
#     hash = "sha512"
#     # The number of iterations used to derive the key from your password.
#     iterations = 100000
#     # Specifies the salt length (in bytes) for the PBKDF2.
#     saltlen = 16
#     # Settings for the "scrypt" key-derivation type
#     [encryption.chachapoly.scrypt]
#     n = 131072
#     r = 8
#     p = 1
#     # Specifies the salt length (in bytes) for Scrypt.
#     saltlen = 16
#
#   [encryption.openpgp]
#   # The cipher to use, currently supported: "aes256", "aes128".
#   # The number after "aes" specifies the key length (in bits).
#   cipher = "aes256"
#   # s2kcount sets the number of iterations used to derive a key from your password.
#   # The more iterations, the longer it takes to convert your password to a key.
#   # This increases the time required for e.g. dictionary-attacks.
#   # Currently supported values: 1024-65011712 (inclusive).
#   # Not all values in the 1024-65011712 range are legal and if an illegal value is selected,
#   # the value is automatically rounded up to the nearest legal value.
#   s2kcount = 65011712
#
#   [encryption.aes_gcm]
#   # Specifies the key length (in bytes) to use for AES.
#   # Currently supported values: 32, 24, 16 for 256bit, 192bit, 128bit respectively.
#   keylen = 32
#   # Specifies the key derivation function to use.
#   # Currently supported values: "pbkdf2", "scrypt".
#   keyderivation = "pbkdf2"
#     # Settings for the "pbkdf2" Key-Derivation type
#     [encryption.aes_gcm.pbkdf2]
#     # The hash function to use for PBKDF2.
#     # Currently supported values: "sha512", "sha256".
#     hash = "sha512"
#     # The number of iterations used to derive the key from your password.
#     iterations = 100000
#     # Specifies the salt length (in bytes) for the PBKDF2.
#     saltlen = 16
#     # Settings for the "scrypt" key-derivation type
#     [encryption.aes_gcm.scrypt]
#     n = 131072
#     r = 8
#     p = 1
#     # Specifies the salt length (in bytes) for Scrypt.
#     saltlen = 16
